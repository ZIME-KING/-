; Asm codes generated by Shanghai Haier C Compiler
; HRCO, Ver: 1.0,0133

#INCLUDE       	<ES7P0693.INC>
#INCLUDE       	<OPERATION.INC>
	PUBLIC         	_acos
	PUBLIC         	_acosDATA
	PUBLIC         	_asin
	PUBLIC         	_asinDATA
	PUBLIC         	_atan2
	PUBLIC         	_atan2DATA
	PUBLIC         	_atan
	PUBLIC         	_atanDATA
	PUBLIC         	_ceil
	PUBLIC         	_ceilDATA
	PUBLIC         	_cos
	PUBLIC         	_cosDATA
	PUBLIC         	_cosh
	PUBLIC         	_coshDATA
	PUBLIC         	_eval_poly
	PUBLIC         	_eval_polyDATA
	PUBLIC         	_exp
	PUBLIC         	_expDATA
	PUBLIC         	_fabs
	PUBLIC         	_fabsDATA
	PUBLIC         	_floor
	PUBLIC         	_floorDATA
	PUBLIC         	_frexp
	PUBLIC         	_frexpDATA
	PUBLIC         	_ldexp
	PUBLIC         	_ldexpDATA
	PUBLIC         	_log10
	PUBLIC         	_log10DATA
	PUBLIC         	_log
	PUBLIC         	_logDATA
	PUBLIC         	_pow
	PUBLIC         	_powDATA
	PUBLIC         	_sin
	PUBLIC         	_sinDATA
	PUBLIC         	_sinh
	PUBLIC         	_sinhDATA
	PUBLIC         	_sqrt
	PUBLIC         	_sqrtDATA
	PUBLIC         	_tan
	PUBLIC         	_tanDATA
	PUBLIC         	_tanh
	PUBLIC         	_tanhDATA
D__ae_projects_Compiler_Library_Source_stdlib_stdlib_math_97_math_cconst0#	CSEG           
	ADD            	PCRL,	1
_atan_coeff_a_37
	RETIA          	0X6
	RETIA          	0X3C
	RETIA          	0X4
	RETIA          	0X42
	RETIA          	0X7D
	RETIA          	0X9F
	RETIA          	0X6A
	RETIA          	0X42
	RETIA          	0X5C
	RETIA          	0X90
	RETIA          	0X1
	RETIA          	0X42
	RETIA          	0X60
	RETIA          	0X4D
	RETIA          	0XBB
	RETIA          	0X40
	RETIA          	0X51
	RETIA          	0XEC
	RETIA          	0X47
	RETIA          	0X3E
	RETIA          	0XDE
	RETIA          	0X8D
	RETIA          	0X1F
	RETIA          	0XBB
D__ae_projects_Compiler_Library_Source_stdlib_stdlib_math_97_math_cconst1#	CSEG           
	ADD            	PCRL,	1
_atan_coeff_b_37
	RETIA          	0X6
	RETIA          	0X3C
	RETIA          	0X4
	RETIA          	0X42
	RETIA          	0XC0
	RETIA          	0X59
	RETIA          	0X8B
	RETIA          	0X42
	RETIA          	0X74
	RETIA          	0X4
	RETIA          	0X44
	RETIA          	0X42
	RETIA          	0XF9
	RETIA          	0X9B
	RETIA          	0X4F
	RETIA          	0X41
	RETIA          	0X0
	RETIA          	0X0
	RETIA          	0X80
	RETIA          	0X3F
D__ae_projects_Compiler_Library_Source_stdlib_stdlib_math_97_math_cconst2#	CSEG           
	ADD            	PCRL,	1
_exp_coeff_47
	RETIA          	0X0
	RETIA          	0X0
	RETIA          	0X80
	RETIA          	0X3F
	RETIA          	0X18
	RETIA          	0X72
	RETIA          	0X31
	RETIA          	0X3F
	RETIA          	0XF0
	RETIA          	0XFD
	RETIA          	0X75
	RETIA          	0X3E
	RETIA          	0X47
	RETIA          	0X58
	RETIA          	0X63
	RETIA          	0X3D
	RETIA          	0X58
	RETIA          	0X95
	RETIA          	0X1D
	RETIA          	0X3C
	RETIA          	0X82
	RETIA          	0XC4
	RETIA          	0XAE
	RETIA          	0X3A
	RETIA          	0XA8
	RETIA          	0X78
	RETIA          	0X21
	RETIA          	0X39
	RETIA          	0XEF
	RETIA          	0X93
	RETIA          	0X80
	RETIA          	0X37
	RETIA          	0XA0
	RETIA          	0X92
	RETIA          	0XA7
	RETIA          	0X35
	RETIA          	0X46
	RETIA          	0X56
	RETIA          	0X15
	RETIA          	0X34
D__ae_projects_Compiler_Library_Source_stdlib_stdlib_math_97_math_cconst3#	CSEG           
	ADD            	PCRL,	1
_log_coeff_65
	RETIA          	0X0
	RETIA          	0X0
	RETIA          	0X0
	RETIA          	0X0
	RETIA          	0XC4
	RETIA          	0XFF
	RETIA          	0X7F
	RETIA          	0X3F
	RETIA          	0X80
	RETIA          	0XEF
	RETIA          	0XFF
	RETIA          	0XBE
	RETIA          	0X90
	RETIA          	0XE1
	RETIA          	0XA9
	RETIA          	0X3E
	RETIA          	0XEC
	RETIA          	0X82
	RETIA          	0X76
	RETIA          	0XBE
	RETIA          	0X82
	RETIA          	0XAD
	RETIA          	0X2B
	RETIA          	0X3E
	RETIA          	0XE
	RETIA          	0X3C
	RETIA          	0XC3
	RETIA          	0XBD
	RETIA          	0X87
	RETIA          	0XD1
	RETIA          	0X13
	RETIA          	0X3D
	RETIA          	0X41
	RETIA          	0X78
	RETIA          	0XD3
	RETIA          	0XBB
D__ae_projects_Compiler_Library_Source_stdlib_stdlib_math_97_math_cconst4#	CSEG           
	ADD            	PCRL,	1
_sin_coeff_a_74
	RETIA          	0XEC
	RETIA          	0XF3
	RETIA          	0X4A
	RETIA          	0X48
	RETIA          	0X35
	RETIA          	0X95
	RETIA          	0X95
	RETIA          	0XC7
	RETIA          	0X17
	RETIA          	0XC1
	RETIA          	0XDC
	RETIA          	0X45
	RETIA          	0XFD
	RETIA          	0XDB
	RETIA          	0X6D
	RETIA          	0XC3
	RETIA          	0X72
	RETIA          	0XB3
	RETIA          	0X33
	RETIA          	0X40
D__ae_projects_Compiler_Library_Source_stdlib_stdlib_math_97_math_cconst5#	CSEG           
	ADD            	PCRL,	1
_sin_coeff_b_74
	RETIA          	0X2B
	RETIA          	0X34
	RETIA          	0X1
	RETIA          	0X48
	RETIA          	0X7F
	RETIA          	0X9D
	RETIA          	0XB0
	RETIA          	0X45
	RETIA          	0XE7
	RETIA          	0XFF
	RETIA          	0XD9
	RETIA          	0X42
	RETIA          	0X0
	RETIA          	0X0
	RETIA          	0X80
	RETIA          	0X3F
_eval_poly_res_45	EQU            	_eval_polyDATA + 0X8		; Bank 0
_eval_poly_#T733_45	EQU            	_eval_polyDATA + 0X8		; Bank 0
_eval_poly_#T734_45	EQU            	_eval_polyDATA + 0XC		; Bank 0
_eval_poly_#T750_45	EQU            	_eval_polyDATA + 0XC		; Bank 0
_eval_poly_#T773_45	EQU            	_eval_polyDATA + 0X10		; Bank 0
_eval_poly_#T777_45	EQU            	_eval_polyDATA + 0X12		; Bank 0
_eval_poly_#T778_45	EQU            	_eval_polyDATA + 0X10		; Bank 0
_frexp_#T1182_58	EQU            	_frexpDATA + 0X6		; Bank 0
_frexp_#T1185_58	EQU            	_frexpDATA + 0X8		; Bank 0
_log_exp_65	EQU            	_logDATA + 0X4		; Bank 0
_log_#T1399_65	EQU            	_logDATA + 0X6		; Bank 0
_log_#T1418_65	EQU            	_logDATA + 0XA		; Bank 0
_log_#T1475_65	EQU            	_logDATA + 0X6		; Bank 0
_log_#T1476_65	EQU            	_logDATA + 0XA		; Bank 0
_log_#T1477_65	EQU            	_logDATA + 0X4		; Bank 0
#TMP	EQU            	?_TMP+ 0XF		; Bank 0
?_TMP_RET	EQU            	?_TMP		; Bank 0
_MULA_0#sh	EQU            	(MULA - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULB_0#sh	EQU            	(MULB - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULL_0#sh	EQU            	(MULL - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULH_0#sh	EQU            	(MULH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEL_0#sh	EQU            	(DIVEL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEM_0#sh	EQU            	(DIVEM - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVSL_0#sh	EQU            	(DIVSL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVSH_0#sh	EQU            	(DIVSH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVQL_0#sh	EQU            	(DIVQL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVQM_0#sh	EQU            	(DIVQM - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVRL_0#sh	EQU            	(DIVRL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVRH_0#sh	EQU            	(DIVRH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVC_0#sh	EQU            	(DIVC - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEU_0#sh	EQU            	(DIVEU - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEH_0#sh	EQU            	(DIVEH - 0X6080) % 0X40 + 0xC0		; Bank 0
_FRAH_0#sh	EQU            	(FRAH - 0X6080) % 0X40 + 0xC0		; Bank 0
_FRAL_0#sh	EQU            	(FRAL - 0X6080) % 0X40 + 0xC0		; Bank 0
	_DESC          	eval_poly,0X13,0X0

SECTION1eval_poly	UNINTIAL       	0		; Bank 0
	ORG            	0XDD		; Bank 0
_eval_polyDATA	RSEG           	0X14		; Bank 0
eval_poly#	CSEG           
_eval_poly
	CLR            	BKSR
;  149:(    LSH_2S,          n ,          2 ,     #T733)

; ITemplate_LSH1_4
	MOVI           	0x2
	ADDI           	0x1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	MOVRA          	_eval_polyDATA+0X6		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_eval_polyDATA+0X6+0x1		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	GOTO           	#L2071
#L2072
	BCC            	PSW,	0x0
	RL             	(?_TMP+0x1) & 0X7F,	0x1		; Bank 0
	RL             	(?_TMP+0x2) & 0X7F,	0x1		; Bank 0
#L2071
	ADDI           	0xff
	JBS            	PSW,	0x2
	GOTO           	#L2072
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T733_45		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T733_45+0x1		; Bank 1
;  149:(     ADD_2,      #T733 ,          d ,     #T734)

; ITemplate_ADD1_4
	MOVRA          	_eval_poly_#T733_45		; Bank 1
	SECTION        	0x1
	ADD            	(_eval_polyDATA+0X4) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_poly_#T734_45) & 0X7F		; Bank 1
	MOV            	(_eval_poly_#T733_45+0x1) & 0X7F,	0x0		; Bank 1
	ADDC           	(_eval_polyDATA+0X4+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_poly_#T734_45+0x1) & 0X7F		; Bank 1
;  149:(    ASGN_4,     *#T734 ,            ,       res)

; ITemplate_GetRomRef
	MOV            	(_eval_poly_#T734_45) & 0X7F,	0x0		; Bank 1
	MOVAR          	CSEG_PTR		; Bank 0
	MOV            	(_eval_poly_#T734_45+0x1) & 0X7F,	0x0		; Bank 1
	MOVAR          	CSEG_PTR+0x1		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	SECTION        	0x0
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
; ITemplate_ASGN1_4
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45+0x3		; Bank 1
;  150:(     LABEL,      #L735 ,            ,          )

; ITemplate_LABEL
#L735
;  150:(      JZ_2,          n ,            ,     #L737)

; ITemplate_JZ1_4
	SECTION        	0x1
	MOV            	(_eval_polyDATA+0X6) & 0X7F,	0x0		; Bank 1
	IOR            	(_eval_polyDATA+0X6+0x1) & 0X7F,	0x0		; Bank 1
	JBC            	PSW,	0x2
	GOTO           	#L737
;  151:(     MUL_D,          x ,        res ,     #T750)

; ITemplate_LibFunc3
	MOV            	(_eval_poly_res_45+0x3) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x7		; Bank 0
	MOV            	(_eval_poly_res_45+0x2) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x6		; Bank 0
	MOV            	(_eval_poly_res_45+0x1) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x5		; Bank 0
	MOV            	(_eval_poly_res_45) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x4		; Bank 0
	MOV            	(_eval_polyDATA+0X0+0x3) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x3		; Bank 0
	MOV            	(_eval_polyDATA+0X0+0x2) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x2		; Bank 0
	MOV            	(_eval_polyDATA+0X0+0x1) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x1		; Bank 0
	MOV            	(_eval_polyDATA+0X0) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP		; Bank 0
	SEGMENTSEL     	DLMUL
	SECTION        	0x0
	CALL           	DLMUL		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
; ITemplate_ASGN_RET
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T750_45		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T750_45+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T750_45+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T750_45+0x3		; Bank 1
;  151:(     SUB_2,          n ,          1 ,     #T773)

; ITemplate_SUB1_4
	MOVI           	0x1
	SECTION        	0x1
	SUB            	(_eval_polyDATA+0X6) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_poly_#T773_45) & 0X7F		; Bank 1
	MOVI           	0x0
	SUBC           	(_eval_polyDATA+0X6+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_poly_#T773_45+0x1) & 0X7F		; Bank 1
;  151:(    ASGN_2,      #T773 ,            ,         n)

; ITemplate_ASGN1_4_R
	MOV            	(_eval_poly_#T773_45+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_polyDATA+0X6+0x1) & 0X7F		; Bank 1
	MOV            	(_eval_poly_#T773_45) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_polyDATA+0X6) & 0X7F		; Bank 1
;  151:(    LSH_2S,      #T773 ,          2 ,     #T777)

; ITemplate_LSH1_4
	MOVI           	0x2
	ADDI           	0x1
	MOVAR          	?_TMP		; Bank 0
	MOV            	(_eval_poly_#T773_45) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x1		; Bank 0
	MOV            	(_eval_poly_#T773_45+0x1) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP+0x2		; Bank 0
	MOVRA          	?_TMP		; Bank 0
	GOTO           	#L2073
#L2074
	BCC            	PSW,	0x0
	SECTION        	0x0
	RL             	(?_TMP+0x1) & 0X7F,	0x1		; Bank 0
	RL             	(?_TMP+0x2) & 0X7F,	0x1		; Bank 0
#L2073
	ADDI           	0xff
	JBS            	PSW,	0x2
	GOTO           	#L2074
	SECTION        	0x0
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T777_45		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_#T777_45+0x1		; Bank 1
;  151:(     ADD_2,      #T777 ,          d ,     #T778)

; ITemplate_ADD1_4
	MOVRA          	_eval_poly_#T777_45		; Bank 1
	SECTION        	0x1
	ADD            	(_eval_polyDATA+0X4) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_poly_#T778_45) & 0X7F		; Bank 1
	MOV            	(_eval_poly_#T777_45+0x1) & 0X7F,	0x0		; Bank 1
	ADDC           	(_eval_polyDATA+0X4+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_poly_#T778_45+0x1) & 0X7F		; Bank 1
;  151:(     ADD_D,      #T750 ,     *#T778 ,       res)

; ITemplate_GetRomRef
	MOV            	(_eval_poly_#T778_45) & 0X7F,	0x0		; Bank 1
	MOVAR          	CSEG_PTR		; Bank 0
	MOV            	(_eval_poly_#T778_45+0x1) & 0X7F,	0x0		; Bank 1
	MOVAR          	CSEG_PTR+0x1		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	SECTION        	0x0
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP+0xf) & 0X7F		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP+0x10) & 0X7F		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP+0x11) & 0X7F		; Bank 0
	SEGMENTSEL     	STRINGTABLE
	CALL           	STRINGTABLE		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVA           	(?_TMP+0x12) & 0X7F		; Bank 0
; ITemplate_LibFunc3
	MOV            	(?_TMP+0x12) & 0X7F,	0x0		; Bank 0
	MOVA           	(?_TMP+0x7) & 0X7F		; Bank 0
	MOV            	(?_TMP+0x11) & 0X7F,	0x0		; Bank 0
	MOVA           	(?_TMP+0x6) & 0X7F		; Bank 0
	MOV            	(?_TMP+0x10) & 0X7F,	0x0		; Bank 0
	MOVA           	(?_TMP+0x5) & 0X7F		; Bank 0
	MOV            	(?_TMP+0xf) & 0X7F,	0x0		; Bank 0
	MOVA           	(?_TMP+0x4) & 0X7F		; Bank 0
	MOVRA          	_eval_poly_#T750_45+0x3		; Bank 1
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
	MOVRA          	_eval_poly_#T750_45+0x2		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOVRA          	_eval_poly_#T750_45+0x1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_eval_poly_#T750_45		; Bank 1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	SEGMENTSEL     	DLADD
	CALL           	DLADD		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
; ITemplate_ASGN_RET
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_eval_poly_res_45+0x3		; Bank 1
;  151:(       JMP,            ,            ,     #L735)

; ITemplate_JMP
	GOTO           	#L735
;  151:(     LABEL,      #L737 ,            ,          )

; ITemplate_LABEL
#L737
;  152:(     RET_4,        res ,            ,      #RET)

; ITemplate_RET2_N
	MOV            	(_eval_poly_res_45) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP_RET		; Bank 0
	MOV            	(_eval_poly_res_45+0x1) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP_RET+0x1		; Bank 0
	MOV            	(_eval_poly_res_45+0x2) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP_RET+0x2		; Bank 0
	MOV            	(_eval_poly_res_45+0x3) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP_RET+0x3		; Bank 0
	MOVRA          	?_TMP_RET		; Bank 0
	SECTION        	0x0
	RET            			; Bank 0		; ShBank 0
	_DESC          	frexp,0X5,0X0

SECTION1frexp	UNINTIAL       	0		; Bank 0
	ORG            	0XDD		; Bank 0
_frexpDATA	RSEG           	0XA		; Bank 0
frexp#	CSEG           
_frexp
	CLR            	BKSR
;  238:(     JNZ_4,      value ,            ,    #L1137)

; ITemplate_JNZ1_4
	SECTION        	0x1
	MOV            	(_frexpDATA+0X0) & 0X7F,	0x0		; Bank 1
	IOR            	(_frexpDATA+0X0+0x1) & 0X7F,	0x0		; Bank 1
	IOR            	(_frexpDATA+0X0+0x2) & 0X7F,	0x0		; Bank 1
	IOR            	(_frexpDATA+0X0+0x3) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L1137
;  239:(    ASGN_2,          0 ,            ,     *eptr)

; ITemplate_ASGN1_4
; ITemplate_SetFSR
	MOV            	(_frexpDATA+0X4+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	IAAH
	MOV            	(_frexpDATA+0X4) & 0X7F,	0x0		; Bank 1
	MOVA           	IAAL
	MOVI           	0x0
; ITemplate_SetINDF
	MOVA           	IAD
	ISTEP          	0x1
	MOVI           	0x0
; ITemplate_SetINDF
	MOVA           	IAD
	ISTEP          	0x1
;  240:(     RET_4,   0.000000 ,            ,      #RET)

; ITemplate_RET2_N_I
	MOVI           	0x0
	MOVAR          	?_TMP_RET+0x3		; Bank 0
	MOVI           	0x0
	MOVAR          	?_TMP_RET+0x2		; Bank 0
	MOVI           	0x0
	MOVAR          	?_TMP_RET+0x1		; Bank 0
	SECTION        	0x0
	RETIA          	0x0		; Bank 0		; ShBank 0
;  241:(     LABEL,     #L1137 ,            ,          )

; ITemplate_LABEL
#L1137
;  242:(    RSH_4U, *(value.0) ,         23 ,    #T1182)

; ITemplate_RSH1_4U
	MOVI           	0x17
	ADDI           	0x1
	SECTION        	0x0
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	MOVRA          	_frexpDATA+0X0		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_frexpDATA+0X0+0x1		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOVRA          	_frexpDATA+0X0+0x2		; Bank 1
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
	MOVRA          	_frexpDATA+0X0+0x3		; Bank 1
	MOVA           	(?_TMP+0x4) & 0X7F		; Bank 0
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	GOTO           	#L2075
#L2076
	BCC            	PSW,	0x0
	RR             	(?_TMP+0x4) & 0X7F,	0x1		; Bank 0
	RR             	(?_TMP+0x3) & 0X7F,	0x1		; Bank 0
	RR             	(?_TMP+0x2) & 0X7F,	0x1		; Bank 0
	RR             	(?_TMP+0x1) & 0X7F,	0x1		; Bank 0
#L2075
	ADDI           	0xff
	JBS            	PSW,	0x2
	GOTO           	#L2076
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_frexp_#T1182_58		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_frexp_#T1182_58+0x1		; Bank 1
;  242:(    BAND_2,        255 ,     #T1182 ,    #T1185)

; ITemplate_BAND1_4
	MOVRA          	_frexp_#T1182_58		; Bank 1
	ANDI           	0xff
	MOVAR          	_frexp_#T1185_58		; Bank 1
	MOVRA          	_frexp_#T1182_58+0x1		; Bank 1
	ANDI           	0x0
	MOVAR          	_frexp_#T1185_58+0x1		; Bank 1
;  242:(     SUB_2,     #T1185 ,        126 ,     *eptr)

; ITemplate_SUB1_4
; ITemplate_SetFSR
	MOVRA          	_frexpDATA+0X4+0x1		; Bank 1
	MOVA           	IAAH
	MOVRA          	_frexpDATA+0X4		; Bank 1
	MOVA           	IAAL
	MOVI           	0x7e
	SECTION        	0x1
	SUB            	(_frexp_#T1185_58) & 0X7F,	0x0		; Bank 1
; ITemplate_SetINDF
	MOVA           	IAD
	ISTEP          	0x1
	MOVI           	0x0
	SUBC           	(_frexp_#T1185_58+0x1) & 0X7F,	0x0		; Bank 1
; ITemplate_SetINDF
	MOVA           	IAD
	ISTEP          	0x1
;  243:(    ASGN_1,          0 ,            ,*(value.2|128))

; ITemplate_CLR_B1_TMP
	BCC            	(_frexpDATA+0X0+0x2) & 0X7F,	0x7		; Bank 1
;  244:(    ASGN_1,         63 ,            ,*(value.3|127))

; ITemplate_ASGN1_4
	MOVI           	0x3f
	MOVAR          	?_TMP		; Bank 0
; ITemplate_CVTC_BF_S0_W1_N
	MOV            	(_frexpDATA+0X0+0x3) & 0X7F,	0x0		; Bank 1
	SECTION        	0x0
	XOR            	(?_TMP) & 0X7F,	0x0		; Bank 0
	ANDI           	0x80
	XOR            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_frexpDATA+0X0+0x3		; Bank 1
;  245:(     RET_4,      value ,            ,      #RET)

; ITemplate_RET2_N
	MOVRA          	_frexpDATA+0X0		; Bank 1
	MOVA           	(?_TMP_RET) & 0X7F		; Bank 0
	MOVRA          	_frexpDATA+0X0+0x1		; Bank 1
	MOVA           	(?_TMP_RET+0x1) & 0X7F		; Bank 0
	MOVRA          	_frexpDATA+0X0+0x2		; Bank 1
	MOVA           	(?_TMP_RET+0x2) & 0X7F		; Bank 0
	MOVRA          	_frexpDATA+0X0+0x3		; Bank 1
	MOVA           	(?_TMP_RET+0x3) & 0X7F		; Bank 0
	MOV            	(?_TMP_RET) & 0X7F,	0x0		; Bank 0
	RET            			; Bank 0		; ShBank 0
	_DESC          	log,0XF,0X0,frexp,eval_poly

SECTION1log	UNINTIAL       	0		; Bank 0
	ORG            	0XCF		; Bank 0
_logDATA	RSEG           	0XE		; Bank 0
log#	CSEG           
_log
	CLR            	BKSR
;  283:(     JGE_D,          x ,   0.000000 ,    #L1371)

; ITemplate_JGE_D
	MOVI           	0x0
	MOVA           	(?_TMP+0x4) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x5) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x6) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x7) & 0X7F		; Bank 0
	MOVRA          	_logDATA+0X0		; Bank 1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	MOVRA          	_logDATA+0X0+0x1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_logDATA+0X0+0x2		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOVRA          	_logDATA+0X0+0x3		; Bank 1
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
	SEGMENTSEL     	DLCMP
	CALL           	DLCMP		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	JBC            	PSW,	0x0
	GOTO           	#L1371
;  284:(     RET_4,   0.000000 ,            ,      #RET)

; ITemplate_RET2_N_I
	MOVI           	0x0
	MOVA           	(?_TMP_RET+0x3) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP_RET+0x2) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP_RET+0x1) & 0X7F		; Bank 0
	RETIA          	0x0		; Bank 0		; ShBank 0
;  285:(     LABEL,     #L1371 ,            ,          )

; ITemplate_LABEL
#L1371
;  286:(     JNZ_4,          x ,            ,    #L1386)

; ITemplate_JNZ1_4
	SECTION        	0x1
	MOV            	(_logDATA+0X0) & 0X7F,	0x0		; Bank 1
	IOR            	(_logDATA+0X0+0x1) & 0X7F,	0x0		; Bank 1
	IOR            	(_logDATA+0X0+0x2) & 0X7F,	0x0		; Bank 1
	IOR            	(_logDATA+0X0+0x3) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L1386
;  287:(     RET_4,   0.000000 ,            ,      #RET)

; ITemplate_RET2_N_I
	MOVI           	0x0
	SECTION        	0x0
	MOVA           	(?_TMP_RET+0x3) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP_RET+0x2) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP_RET+0x1) & 0X7F		; Bank 0
	RETIA          	0x0		; Bank 0		; ShBank 0
;  288:(     LABEL,     #L1386 ,            ,          )

; ITemplate_LABEL
#L1386
;  289:(    PARA_4,          x ,            ,     value)

; ITemplate_ASGN1_4
	MOV            	(_logDATA+0X0) & 0X7F,	0x0		; Bank 1
	MOVA           	(_frexpDATA+0X0) & 0X7F		; Bank 1
	MOV            	(_logDATA+0X0+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_frexpDATA+0X0+0x1) & 0X7F		; Bank 1
	MOV            	(_logDATA+0X0+0x2) & 0X7F,	0x0		; Bank 1
	MOVA           	(_frexpDATA+0X0+0x2) & 0X7F		; Bank 1
	MOV            	(_logDATA+0X0+0x3) & 0X7F,	0x0		; Bank 1
	MOVA           	(_frexpDATA+0X0+0x3) & 0X7F		; Bank 1
;  289:(    PARA_2,    (exp.0) ,            ,      eptr)

; ITemplate_ASGN1_4
	MOVI           	_log_exp_65
	MOVA           	(_frexpDATA+0X4) & 0X7F		; Bank 1
	MOVI           	HIGH(_log_exp_65)
	MOVA           	(_frexpDATA+0X4+0x1) & 0X7F		; Bank 1
;  289:(     CALLR,  (frexp.0) ,            ,    #T1399)

; ITemplate_CALL
	SEGMENTSEL     	_frexp
	CALL           	_frexp		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVAR          	_log_#T1399_65		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1399_65+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1399_65+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1399_65+0x3		; Bank 1
;  289:(     MUL_D,     #T1399 ,   2.000000 ,    #T1418)

; ITemplate_LibFunc3
	MOVI           	0x40
	MOVA           	(?_TMP+0x7) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x6) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x5) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x4) & 0X7F		; Bank 0
	MOVRA          	_log_#T1399_65+0x3		; Bank 1
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
	MOVRA          	_log_#T1399_65+0x2		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOVRA          	_log_#T1399_65+0x1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_log_#T1399_65		; Bank 1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	SEGMENTSEL     	DLMUL
	CALL           	DLMUL		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
; ITemplate_ASGN_RET
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1418_65		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1418_65+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1418_65+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1418_65+0x3		; Bank 1
;  289:(     SUB_D,     #T1418 ,   1.000000 ,         x)

; ITemplate_LibFunc3
	MOVI           	0x3f
	MOVA           	(?_TMP+0x7) & 0X7F		; Bank 0
	MOVI           	0x80
	MOVA           	(?_TMP+0x6) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x5) & 0X7F		; Bank 0
	MOVI           	0x0
	MOVA           	(?_TMP+0x4) & 0X7F		; Bank 0
	MOVRA          	_log_#T1418_65+0x3		; Bank 1
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
	MOVRA          	_log_#T1418_65+0x2		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOVRA          	_log_#T1418_65+0x1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_log_#T1418_65		; Bank 1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	SEGMENTSEL     	DLSUB
	CALL           	DLSUB		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
; ITemplate_ASGN_RET
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_logDATA+0X0		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_logDATA+0X0+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_logDATA+0X0+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_logDATA+0X0+0x3		; Bank 1
;  290:(     SUB_2,        exp ,          1 ,       exp)

; ITemplate_DEC_2_TMP
	SECTION        	0x1
	MOV            	(_log_exp_65) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L2077
	DEC            	(_log_exp_65+0x1) & 0X7F		; Bank 1
#L2077
	DEC            	(_log_exp_65) & 0X7F		; Bank 1
;  291:(    PARA_4,          x ,            ,         x)

; ITemplate_ASGN1_4
	MOV            	(_logDATA+0X0) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_polyDATA+0X0) & 0X7F		; Bank 1
	MOV            	(_logDATA+0X0+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_polyDATA+0X0+0x1) & 0X7F		; Bank 1
	MOV            	(_logDATA+0X0+0x2) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_polyDATA+0X0+0x2) & 0X7F		; Bank 1
	MOV            	(_logDATA+0X0+0x3) & 0X7F,	0x0		; Bank 1
	MOVA           	(_eval_polyDATA+0X0+0x3) & 0X7F		; Bank 1
;  291:(    PARA_2,  (coeff.0) ,            ,         d)

; ITemplate_ASGN1_4
	MOVI           	_log_coeff_65
	MOVA           	(_eval_polyDATA+0X4) & 0X7F		; Bank 1
	MOVI           	HIGH(_log_coeff_65)
	MOVA           	(_eval_polyDATA+0X4+0x1) & 0X7F		; Bank 1
;  291:(    PARA_2,          8 ,            ,         n)

; ITemplate_ASGN1_4
	MOVI           	0x8
	MOVA           	(_eval_polyDATA+0X6) & 0X7F		; Bank 1
	MOVI           	0x0
	MOVA           	(_eval_polyDATA+0X6+0x1) & 0X7F		; Bank 1
;  291:(     CALLR, (eval_poly.0) ,            ,         x)

; ITemplate_CALL
	SEGMENTSEL     	_eval_poly
	CALL           	_eval_poly		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOVAR          	_logDATA+0X0		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_logDATA+0X0+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_logDATA+0X0+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_logDATA+0X0+0x3		; Bank 1
;  292:(    CVSI_D,        exp ,            ,    #T1475)

; ITemplate_LibFunc1
	MOVRA          	_log_exp_65		; Bank 1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	MOVRA          	_log_exp_65+0x1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	SEGMENTSEL     	SW2DL
	CALL           	SW2DL		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1475_65		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1475_65+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1475_65+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1475_65+0x3		; Bank 1
;  292:(     MUL_D,     #T1475 ,   0.693147 ,    #T1476)

; ITemplate_LibFunc3
	MOVI           	0x3f
	MOVA           	(?_TMP+0x7) & 0X7F		; Bank 0
	MOVI           	0x31
	MOVA           	(?_TMP+0x6) & 0X7F		; Bank 0
	MOVI           	0x72
	MOVA           	(?_TMP+0x5) & 0X7F		; Bank 0
	MOVI           	0x18
	MOVA           	(?_TMP+0x4) & 0X7F		; Bank 0
	MOVRA          	_log_#T1475_65+0x3		; Bank 1
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
	MOVRA          	_log_#T1475_65+0x2		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOVRA          	_log_#T1475_65+0x1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_log_#T1475_65		; Bank 1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	SEGMENTSEL     	DLMUL
	CALL           	DLMUL		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
; ITemplate_ASGN_RET
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1476_65		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1476_65+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1476_65+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1476_65+0x3		; Bank 1
;  292:(     ADD_D,     #T1476 ,          x ,    #T1477)

; ITemplate_LibFunc3
	MOVRA          	_logDATA+0X0+0x3		; Bank 1
	MOVA           	(?_TMP+0x7) & 0X7F		; Bank 0
	MOVRA          	_logDATA+0X0+0x2		; Bank 1
	MOVA           	(?_TMP+0x6) & 0X7F		; Bank 0
	MOVRA          	_logDATA+0X0+0x1		; Bank 1
	MOVA           	(?_TMP+0x5) & 0X7F		; Bank 0
	MOVRA          	_logDATA+0X0		; Bank 1
	MOVA           	(?_TMP+0x4) & 0X7F		; Bank 0
	MOVRA          	_log_#T1476_65+0x3		; Bank 1
	MOVA           	(?_TMP+0x3) & 0X7F		; Bank 0
	MOVRA          	_log_#T1476_65+0x2		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOVRA          	_log_#T1476_65+0x1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_log_#T1476_65		; Bank 1
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	SEGMENTSEL     	DLADD
	CALL           	DLADD		; Bank 0		; ShBank 0
	SEGMENTSEL     	$
; ITemplate_ASGN_RET
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1477_65		; Bank 1
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1477_65+0x1		; Bank 1
	MOV            	(?_TMP+0x2) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1477_65+0x2		; Bank 1
	MOV            	(?_TMP+0x3) & 0X7F,	0x0		; Bank 0
	MOVAR          	_log_#T1477_65+0x3		; Bank 1
;  292:(     RET_4,     #T1477 ,            ,      #RET)

; ITemplate_RET2_N
	MOVRA          	_log_#T1477_65		; Bank 1
	MOVA           	(?_TMP_RET) & 0X7F		; Bank 0
	MOVRA          	_log_#T1477_65+0x1		; Bank 1
	MOVA           	(?_TMP_RET+0x1) & 0X7F		; Bank 0
	MOVRA          	_log_#T1477_65+0x2		; Bank 1
	MOVA           	(?_TMP_RET+0x2) & 0X7F		; Bank 0
	MOVRA          	_log_#T1477_65+0x3		; Bank 1
	MOVA           	(?_TMP_RET+0x3) & 0X7F		; Bank 0
	MOV            	(?_TMP_RET) & 0X7F,	0x0		; Bank 0
	RET            			; Bank 0		; ShBank 0
	END
